package com.leetcode.easy;

import java.util.HashSet;
import java.util.Set;

/**
 * Created by lqy on 2017/11/28.
 * <p>
 * Given two strings s and t which consist of only lowercase letters.
 * <p>
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * <p>
 * Find the letter that was added in t.
 * <p>
 * Example:
 * <p>
 * Input:
 * s = "abcd"
 * t = "abcde"
 * <p>
 * Output:
 * e
 * <p>
 * Explanation:
 * 'e' is the letter that was added.
 */
public class FindtheDifference {
    /**
     * 没去验证过，
     * 但是应该通过不了，
     * 这种方法是指，增加的一个字母，是s串中不存在的字母
     * 而题目应该是s串中多出来的字母
     * 比方说，s串中有2个a，但是t串中有3个a，但是通过这个方法就不会判错
     * @param s
     * @param t
     * @return
     */
    public char findTheDifference(String s, String t) {
        Set<Character> set = new HashSet<Character>();
        for(int i=0;i<s.length();i++){
            set.add(s.charAt(i));
        }
        for(int i=0;i<t.length();i++){
            if(!set.contains(t.charAt(i)))
                return t.charAt(i);
        }
        return 0;
    }

    /**
     * 用的方法是：将t字符串中的所有字母ascii码相加
     * 减去s字符串中的所有字母ascii码相加。
     * 剩下的就是多余的一个字母的ascii码
     * 转成char输出
     * @param s
     * @param t
     * @return
     */
    public char findTheDifference2(String s,String t){
        int sum=0;
        for(int i=0;i<t.length();i++){
            sum+=t.charAt(i);
        }
        for(int i=0;i<s.length();i++){
            sum-=s.charAt(i);
        }
        char c=(char)sum;
        return c;
    }
}
